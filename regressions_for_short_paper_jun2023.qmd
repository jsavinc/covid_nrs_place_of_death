---
title: "Increased home deaths regressions"
author: "Jan Savinc"
format: html
editor_options: 
  chunk_output_type: console
---

# Load packages

```{r, warning=FALSE, message=FALSE}
## install packages from github if not yet available!
# remotes::install_github("datasciencescotland/opendatascot", force = TRUE)
# remotes::install_github("Health-SocialCare-Scotland/phsmethods", force = TRUE)

library(tidyverse)  # for tidy workflow
library(opendatascot)  # importing data from ScotGov open data website
library(phsmethods)  # methods for working with PHS data
library(readxl)  # for reading excel files
# library(SPARQL)  # taken care of by opendatascot
library(lubridate)  # dealing with dates
library(janitor)  # for cleaning column names
library(ISOweek)  # for computing date from ISO week number + year
library(sf)  # for mapping
library(ggrepel)  # for 'mapping'repelling' labels/texst in ggplot
library(patchwork)  # for assembling plots
library(extrafont)  # for working with fonts
library(openxlsx)  # for creating xlsx files
library(knitr)  # for displaying tables in rmd
library(lemon)  # for showing axis & axis labels in every facet in ggplot
library(ggtext)  # for showing coloured title text

## load functions
source("./functions.R")
```


# Copyright attribution

All data used for this study were obtained from the National Records Scotland (NRS) and are Â© Crown copyright, 2020; the details of the licence can be viewed on the [Open Government Licence website](http://www.nationalarchives.gov.uk/doc/open-government-licence/open-government-licence.htm)



# Dates represent event registration, not occurrence!

From NRS website:
  
  > All routine vital events information we publish is based on the date of registration, not the date on which the event occurred. Inevitably, of course, there are delays between the occurrence of an event and its registration.


# Load most recent data

```{r}
load(file = "./workspace.RData")
```


# Set up output directory

Because data are updated on a weekly basis, we'll have a separate directory for every week the data are updated:

```{r}
dir_paper <- file.path(dir_outputs, "short_paper_feb2023")
if (!dir.exists(dir_paper)) dir.create(dir_paper)
```


# Visualisations

## Common elements

```{r}
loadfonts(device="win")  # load imported fonts
# Sys.setenv(R_GSCMD = "C:/Program Files/gs/gs9.27/bin/gswin64c.exe")  # set the location of the GS file  # this not needed, just use device=device_cairo for pdfs in ggsave
windowsFonts("Calibri" = windowsFont("Calibri"))  # to suppress the multiple error messages

theme_set(theme_minimal(base_size = 12) +
            theme(panel.grid.minor = element_blank(),
                  axis.title.y = element_text(margin = margin(0, 20, 0, 0)),  # remove gap to the left of y axis title and below the x axis title
                  axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
                  text=element_text(family="Calibri"),
                  axis.text = element_text(size = 9)
            ))


date_range_text <- glue::glue("Data from w/c {format(earliest_date, '%d %B %Y')} to w/c {format(most_recent_date_available_2023, '%d %B %Y')} (inclusive).")
date_range_text_disaggregated <- glue::glue("Data from w/c {format(earliest_date, '%d %B %Y')} to w/c {format(most_recent_date_available_2023_disaggregated, '%d %B %Y')} (inclusive).")

dashed_line_historical_range_text <- "Range of deaths 2015-19 shown as shaded area; mean shown as dashed line."

only_2020_text <- glue::glue("Data from 2020 included, starting with w/c {format(earliest_date)}.")
only_2023_text <- glue::glue("Data for 2023 only include weeks 1-{format(weeks_available_2023)} (w/c {format(most_recent_date_available_2023)}).")
only_2023_disaggregated_text <- glue::glue("Data for 2023 only include weeks 1-{format(weeks_available_2023_disaggregated)} (w/c {format(most_recent_date_available_2023_disaggregated)}).")

source_nrs_text <- "Source: National Records of Scotland"
source_phs_text <- "Source: Public Health Scotland"

crude_rate_text <- "Total cases = crude cumulative positive cases over time."

death_registrations_text <- "Note: all figures are based on date of registration."

vertical_line_text <- "Vertical dashed line at week number 54 represents start of 2021."

five_year_historical_mean <- "For 2020-2021 data, the 5-year historical period is 2015-2019; for 2022, the period is 2016-2019 + 2021, skipping 2020."

vertical_scale_differs_between_panels_text <- "Note: vertical axis not on the same scale between panels!"

# removed_other_category_text <- glue::glue("Excluding 'Other' institutional place of death, N={merged_deaths_overall %>% filter(sex == 'all' & age == 'all' & place_of_death == 'Other') %>% .$deaths_all_causes %>% sum} for weeks 1-{max(merged_deaths_overall %>% filter(year==2020) %>% .$week_number)} in 2020 and 1-{max(merged_deaths_overall %>% filter(year==2021) %>% .$week_number)} in 2021.")
removed_other_category_text <- glue::glue("Excluding 'Other' institutional place of death.")

historic_period_2015_2019_text <- "Historic mean & range for 2015-2019 throughout."
historic_period_2022_text <- "2020-21 use 2015-2019 historic mean & range; 2022 uses 2016-2019 & 2021."
```

# Simple regressions

In this section I calculate a simple linear regression over home deaths 2015-2019 and predict the expected number of home deaths in 2020-2023, to contrast with the actual number of home deaths.
I also calculate the expected proportion of home deaths from the number of home deaths and total home deaths in 2015-2019 and predict the expected proportion of home deaths in 2020-2023, also to contrast with actual numbers.

The regression is simply number of deaths regressed over year, specifically, number of years since 2015. This allows for the easy interpretation of the intercept as the estimated home deaths in 2015, and the beta coefficient as the annual growth in the number of deaths. Seasonality is not explicitly modeled but is captured by the annual data.

In the logistic regression, the dependent variable is the proportion of home deaths of all deaths, or the odds of home death to non-home death in each year, regressed on the year (number of years since 2015)

## Defining regression data

```{r}
regression_data <- 
  merged_proportions_of_deaths_by_place %>% 
  filter(place_of_death == "Home & other non-institution" & year %in% 2015:2019) %>% 
  mutate(years_since_2015 = 0:(n()-1))
```


## Preliminary: extrapolating 2023 data

There are complete data for 2015-2022, but not 2023, for which there are data for weeks 1-`r weeks_available_2023`. For this reason, I estimate the total number of deaths in 2023 by estimating the proportion of average annual deaths represented by weeks 1-`r weeks_available_2023` in 2015-2019, and then dividing deaths so far in 2023 by the proportion, thereby obtaining an estimated total for 2023.

```{r}
## 2023 only has X weeks' worth of data available; we can extrapolate the annual
## total by computing the percentage of annual data represented by previous
## years at X weeks, and then averaging across those, or taking the min & max
extrapolated_2023_data <-
  historical_weekly_average_overall %>%
  filter(place_of_death %in% c("Home & other non-institution","All") & historic_period == "2015-2019") %>%
  group_by(place_of_death) %>%
  summarise(
    deaths_mean_so_far = sum(deaths_mean[week_number <= weeks_available_2023], na.rm= TRUE),
    deaths_mean_total = sum(deaths_mean, na.rm= TRUE),
    proportion_of_deaths_so_far = deaths_mean_so_far / deaths_mean_total
    )
```

## Predicting absolute number of home deaths

```{r}
model_home_deaths <- lm(data = regression_data, formula = number_of_deaths ~ years_since_2015)

home_deaths_actual_and_predicted_data <-
  bind_rows(
    merged_proportions_of_deaths_by_place %>%
    select(year, number_of_deaths, place_of_death) %>%
    filter(place_of_death == "Home & other non-institution" & year %in% 2015:2019) %>%
      mutate(data_type = "Historic")
    ,
    merged_proportions_of_deaths_by_place %>%
    select(year, number_of_deaths, place_of_death) %>%
    filter(place_of_death == "Home & other non-institution" & year %in% 2020:current_year) %>%
    mutate(
      data_type = "Predicted",
      number_of_deaths = if_else(year %in% 2020:current_year, compute_y_from_x_using_linear_regression(x = year-2015, regression_model = model_home_deaths), number_of_deaths)
      )
    ,
    merged_proportions_of_deaths_by_place %>%
      select(year, number_of_deaths, place_of_death) %>%
      filter(place_of_death == "Home & other non-institution" & year %in% 2020:current_year) %>%
      mutate(
        number_of_deaths = if_else(year == current_year, number_of_deaths / extrapolated_2023_data$proportion_of_deaths_so_far, number_of_deaths),
        year = 2015 + compute_x_from_y_using_linear_regression(y = number_of_deaths, regression_model = model_home_deaths),  # compute predicted X
        data_type = "Actual",  # note: this is actual figures, but at the extrapolated year
        actual_year = 2020:current_year
      )
  ) %>%
  mutate(data_type = factor(data_type, levels = unique(data_type)))
```

## Predicting proportion of home deaths

This takes into account both the number of deaths at home and total number of deaths.

A logistic regression is used via R's `glm(family = binomial)` function, with 'successes' representing home deaths and 'failures' representing non-home deaths.

```{r}
## response variable is formatted as a 2-column matrix of successes and failures
model_proportions <-
  glm(data = regression_data, formula = cbind(number_of_deaths, total_deaths-number_of_deaths) ~ years_since_2015, family = "binomial")

## note this is equivalent to glm(data = regression_data, formula = proportion_of_total ~ years_since_2015, weights = total_deaths, family = "binomial")

model_proportions_predicted <- tibble(years_since_2015 = seq(from=0, to=30, by = 0.1)) %>%
  mutate(year = 2015 + years_since_2015,
         predicted = predict.glm(object = model_proportions, newdata = tibble(years_since_2015), type = "response")
         )

proportions_actual_and_predicted_data <-
  bind_rows(
    merged_proportions_of_deaths_by_place %>%
    filter(place_of_death == "Home & other non-institution" & year %in% 2015:2019) %>%
      mutate(data_type = "Historic")
    ,
    merged_proportions_of_deaths_by_place %>%
    filter(place_of_death == "Home & other non-institution" & year %in% 2020:current_year) %>%
    mutate(
      data_type = "Predicted",
      proportion_of_total = if_else(year %in% 2020:current_year, compute_y_from_x_using_logistic_regression(x = year-2015, regression_model = model_proportions), number_of_deaths)
      )
    ,
    merged_proportions_of_deaths_by_place %>%
      filter(place_of_death == "Home & other non-institution" & year %in% 2020:current_year) %>%
      mutate(
        number_of_deaths = if_else(year == current_year, number_of_deaths / extrapolated_2023_data$proportion_of_deaths_so_far, number_of_deaths),
        # year = as.numeric(2015 + MASS::dose.p(model_proportions, p=proportion_of_total)),  # compute predicted X
        year = as.numeric(2015 + compute_x_from_y_using_logistic_regression(y = proportion_of_total, regression_model = model_proportions)),  # compute predicted X
        data_type = "Actual",  # note: this is actual figures, but at the extrapolated year
        actual_year = 2020:current_year
      )
  ) %>%
  mutate(data_type = factor(data_type, levels = unique(data_type)))

```

## Report estimates from models

```{r}
table_estimates <-
  bind_rows(
    ## actual data
    merged_proportions_of_deaths_by_place %>%
      filter(place_of_death == "Home & other non-institution" & year %in% 2015:2023) %>%
      select(-place_of_death) %>%
      rename(deaths_home = number_of_deaths, deaths_all_places = total_deaths, proportion_home_deaths = proportion_of_total) %>%
      mutate(data = "Actual")
    ,
    ## extrapolated 2023 data
    merged_proportions_of_deaths_by_place %>%
      filter(year %in% 2023) %>%
      inner_join(extrapolated_2023_data, by = "place_of_death") %>%
      group_by(year, place_of_death) %>%
      summarise(deaths_extrapolated = number_of_deaths / proportion_of_deaths_so_far, .groups = "drop") %>%
      pivot_wider(names_from = place_of_death, values_from = deaths_extrapolated) %>%
      rename(deaths_home = `Home & other non-institution`, deaths_all_places = All) %>%
        mutate(proportion_home_deaths = merged_proportions_of_deaths_by_place$proportion_of_total[merged_proportions_of_deaths_by_place$place_of_death=="Home & other non-institution" & merged_proportions_of_deaths_by_place$year == 2023]) %>%  # infer proportion of home deaths
      mutate(data = "Extrapolated")
    ) %>%
    mutate(
      predicted_year_linear = if_else(
        year %in% c(2015:2019, 2023) & data == "Actual",
        NA_real_,
        2015 + compute_x_from_y_using_linear_regression(y = deaths_home, regression_model = model_home_deaths)
      ),
      predicted_year_logistic = if_else(
        year %in% c(2015:2019, 2023) & data == "Actual",
        NA_real_,
        2015 + compute_x_from_y_using_logistic_regression(y = proportion_home_deaths, regression_model = model_proportions)
      )
    ) %>%
    relocate(data)

write_csv(table_estimates, file = file.path(dir_paper, "table_actual_vs_predicted_data.csv"))
```


## Report model summaries

Note: regression coefficients for logistic model were exponentiated.

```{r}
table_model_summaries <-
  bind_rows(
    broom::tidy(model_home_deaths) %>%
      mutate(model = "Linear model, absolute number of home deaths"),
    broom::tidy(model_proportions, exponentiate = TRUE) %>%
      mutate(model = "Logistic model, proportion of home deaths")
  ) %>%
  relocate(model)

write_csv(table_model_summaries, file = file.path(dir_paper, "table_regression_models.csv"))
```


# Regression with covariates

Note: decided not to compute those - too much effort for too little gain!

# Previous estimates

These are inferred from the paper:

> Finucane, A.M., Bone, A.E., Evans, C.J. et al. The impact of population ageing on end-of-life care in Scotland: projections of place of death and recommendations for future service provision. BMC Palliat Care 18, 112 (2019). https://doi.org/10.1186/s12904-019-0490-x

Four different scenarios are provided with different assumptions of relative population mortality growth. They calculated the proportion of people in each age and gender group in each place of death for 2004-2016; the estimated age and gender-specific proportions of deaths by place of death were then applied to the ONS projected deaths. Scenario 4 is unrealistic so it won't be considered here (it assumed that home & care home deaths do not increase above their absolute numbers in 2016).

Note that even the highest estimate computes around 19k home deaths in 2040, whereas there were more than 20k home deaths in 2020.

